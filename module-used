#!/usr/bin/env perl
# -*- cperl -*-
use strict;
use warnings;
use feature qw(say);

use Cwd;
use Data::Dump qw(pp);
use File::Find;
use Module::CoreList;
use Module::ExtractUse;
use Module::Load;
use Quantum::Superpositions;
use Try::Tiny;
use autobox::Core;
use autobox;

my $meu = Module::ExtractUse->new;
my $used = [];
find(
    sub {
        return if $File::Find::dir =~ /\.git/;
        return unless -f $File::Find::name;
        $meu->extract_use($File::Find::name);
        $used->push($meu->array);
    },
    cwd
);

$used = $used->sort->uniq;

my $used_module_version = {};

my @core_modules = keys %{ $Module::CoreList::version{"$]"} };

for my $module (@$used) {
    # next if $module eq @core_modules;

    try {
        load $module;
        $used_module_version->{$module} = $module->VERSION;
    } catch {
        # say STDERR "Failed to load $module";
    }
}

say pp $used_module_version;
