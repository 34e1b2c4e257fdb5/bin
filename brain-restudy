#!/usr/bin/env perl
use v5.14;
use utf8;
binmode STDIN, ":utf8";
binmode STDOUT, ":utf8";
use FindBin;
use lib "$FindBin::Bin/lib";
use List::MoreUtils qw(uniq);
use Brain;
use Brain::Helpers;
use Ceis::Extractor;

my @units = map { utf8::decode($_); $_ } @ARGV
    or die "$0 unit [unit...]\n";

my $brain = Brain->new;
my @origins = ();
my @digests;

for (@units) {
    if (/^[0-9a-f]+$/) {
        push @digests, $_;
        undef $_;
    }
}
@units = grep { defined($_) } @units;

push @digests, $brain->recall(@units);

for my $k (@digests) {
    my $prop = $brain->relations($k);
    push @origins, @{ $prop->{origin} };

    $brain->blob->remove($k);
    for my $rel (qw(origin appear precede follow)) {
        $brain->relation($rel)->remove($k)
    }

    say "forget: $k";
}

my $extractor = Ceis::Extractor->new();

for my $url (uniq @origins) {
    $extractor->url($url);

    my $fulltext = $extractor->fulltext;

    my $k_url      = $brain->blob->add($extractor->url);
    my $k_fulltext = $brain->study($fulltext);

    $brain->relation("origin")->add($k_fulltext, $k_url);

    say "study: $url";
}
