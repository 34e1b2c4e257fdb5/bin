#!/usr/bin/env perl
use v5.14;
use utf8;

binmode STDOUT, ":utf8";

use Path::Class;
use Org::Parser;
use Data::Table;
use List::Util qw(sum);
use Getopt::Std;

my %opts;
getopts("v", \%opts);

$ARGV[0] && -f $ARGV[0] or die "\nUsage: " . file($0)->basename . " expense-file.org\n\n";

my $RE_currency = qr{(?:USD|NTD|JPY)}i;

my %wordmap = (
    qr{(?:餐|吃|喝|宵夜|酥雞|飲|水|lunch|dinner|breakfast|drink|food)}i => "food",
    qr{(?:咖啡|coffee|milk)}i => "coffee",
    qr{(?:gasoline|加油|高速公路|bus)}i => "traffic",
    qr{(?:國民年金|保險|瓦斯|#?bills)}i => "bills",
    qr{(?:生活用品|living)}i => "living",
    qr{(?:#?music)}i => "music",
    qr{(?:\b書\b|#?pleasure)}i => "pleasure",
);

my ($year, $month, $mday);
my @expense_table;

do {
    local $/ = undef;
    open my $fh, "<:utf8", $ARGV[0];
    my $content = <$fh>;

    my $orgp = Org::Parser->new;
    $orgp->parse($content);
}->walk(
    sub {
        my ($el) = @_;

        if ( $el->isa("Org::Element::Headline") ) {
            if ($el->title->as_string =~ m/\b(\d\d\d\d)-(\d\d)-(\d\d)\b/) {
                ($year, $month, $mday) = ($1, $2, $3);
            }
        }
        elsif ( $el->isa("Org::Element::ListItem") ) {
            if ($el->children_as_string =~ /\b(\d+)\s*(${RE_currency})\p{Punct}?\s*(.+)$/) {
                my ($amount, $currency, $description) = ($1, $2, $3);
                utf8::decode($description);
                my $category = "UNKNOWN";

                lc($currency);
                $currency ||= "NTD";

                while (my ($pattern, $tag) = each %wordmap) {
                    if ($description =~ m/$pattern/) {
                        $category = $tag;
                        last;
                    }
                }
                keys %wordmap; # reset the internal iterator

                push @expense_table, ["$year-$month", $amount, $currency, $category];

                if ($opts{v}) {
                    printf('%s-%s %12s %6d %3s %s'."\n", $year, $month, $category, $amount, $currency, $description);
                }
            }
        }
    }
);

my $t = Data::Table->new(\@expense_table, ["Month", "Amount", "Currency", "Category"], 0);
my $t2 = $t->group(
    ["Month", "Category", "Currency"],
    ["Amount"],
    [\&sum],
    ["Total"]
);
$t2->sort("Month", 1, 1, "Currency", 1, 1, "Total", 0, 1);

my $last_month = "";
for my $i (0..$t2->nofRow-1) {
    my $r = $t2->rowHashRef($i);
    if ($last_month ne $r->{Month}) {
        say "\n".$r->{Month};
        say "=" x 8;
        $last_month = $r->{Month};
    }
    printf '  %14s: %6d %s'."\n", @$r{qw(Category Total Currency)};
}

