#!/usr/bin/env perl
use v5.18;
use strict;
use warnings;

use File::Copy qw(move);
use File::Basename qw(dirname fileparse);
use File::Path qw(make_path);
use File::Spec::Functions qw(catfile catdir);
use File::Next;
use Getopt::Long;
use Digest::SHA1;

sub sha1_digest {
    my ($file) = @_;
    open my $fh, "<", $file;
    my $sha1 = Digest::SHA1->new;
    $sha1->addfile($fh);
    return $sha1->hexdigest;
}

sub main {
    my ($opts, $args) = @_;
    my @input = grep { -f || -d } @{ $opts->{i} };
    my $iter = File::Next::files(@input);
    my %plan;
    while (defined( my $file = $iter->() )) {
        next if $file =~ / \.DS_Store \z/x;

        my ($filename, $dir, $ext) = fileparse($file, qr/\.[^.]*/);
        my $sha1 = sha1_digest($file);
        my $newfile = catfile($dir, "${filename}-${sha1}${ext}");
        unless (-f $newfile) {
            say "mv $file $newfile";
            move($file, $newfile);
        }
    }
}

my %opts;
GetOptions(
    \%opts,
    'i=s@',
    'd=s',
    'n',
    'ignore-existing'
);
main(\%opts, [@ARGV]);

