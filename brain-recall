#!/usr/bin/env perl
use v5.14;
use FindBin;
use lib "$FindBin::Bin/lib";
use utf8;
use Encode;
use List::MoreUtils qw(natatime);
use Brain;

binmode STDOUT, ":utf8";

my $brain = Brain->new;

sub properties {
    my ($k) = @_;
    my $prop = { digest => $k };

    for (qw(appear origin precede follow)) {
        $prop->{$_} = $brain->relation($_)->get($k);
    }

    if ($prop->{appear} && !$prop->{origin}) {
        $prop->{origin} = $brain->relation("origin")->get( $prop->{appear} );
    }

    if ($prop->{origin}) {
        $prop->{origin} = [ map { $brain->blob->get($_) } @{$prop->{origin}} ];
    }

    return $prop;
}

sub render_properties {
    my ($k) = @_;
    my $prop = properties($k);

    for (qw(appear precede follow origin)) {
        $prop->{$_} = join " ", @{ $prop->{$_} }
    }

    for (grep { $prop->{$_} } qw(digest appear precede follow origin)) {
        say "$_: $prop->{$_}";
    }
}

my @units = map { Encode::decode_utf8($_) } @ARGV or die "Need something";

for my $k ($brain->recall(@units)) {
    render_properties($k);

    say "\n" . $brain->blob->get($k) . "\n\n";
}
