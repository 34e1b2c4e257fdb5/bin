#!/usr/bin/env perl
use v5.14;
use FindBin;
use lib "$FindBin::Bin/lib";
use utf8;

use Brain;
use Encode;
use List::MoreUtils qw(natatime);
use YAML;

binmode STDOUT, ":utf8";

my @units = map { Encode::decode_utf8($_) } @ARGV or die "Need something";

my $brain = Brain->new;
my $rel_original = $brain->relation("origin");
my $rel_precede  = $brain->relation("precede");
my $rel_follow   = $brain->relation("follow");

sub properties {
    my ($k) = @_;
    my $prop = { digest => $k };
    for (qw(appear origin precede follow)) {
        $prop->{$_} = join " ", @{ $brain->relation($_)->get($k) };

        delete $prop->{$_} unless $prop->{$_};
    }
    return $prop;
}


for my $k ($brain->recall(@units)) {
    say YAML::Dump(properties($k));

    say "\n" . $brain->blob->get($k) . "\n\n";
}
