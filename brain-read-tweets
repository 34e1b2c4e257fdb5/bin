#!/usr/bin/env perl
use v5.14;
use utf8;
binmode STDIN, ":utf8";
binmode STDOUT, ":utf8";

use FindBin;
use lib "$FindBin::Bin/lib";

use AnyEvent;
use AnyEvent::Twitter::Stream;
use YAML;
use Regexp::Common qw /URI/;
use Data::RoundRobin;
use HTML::Entities;

use Brain;

my $brain = Brain->new;

my $done = AnyEvent->condvar;

my $twitter_config = YAML::LoadFile("$ENV{HOME}/.twitterrc");

binmode STDOUT, ":utf8";

my $quitter = AE::signal INT => sub { $done->send };

my $listener = AnyEvent::Twitter::Stream->new(
    consumer_key    => $twitter_config->{consumer_key},
    consumer_secret => $twitter_config->{consumer_secret},
    token           => $twitter_config->{access_token},
    token_secret    => $twitter_config->{access_token_secret},
    method   => "userstream",
    on_tweet => sub {
        my $tweet = shift;
        my $text = $tweet->{text};

        return unless $text && $text =~ /\S/;
        my @urls = $text =~ m/($RE{URI}{HTTP}{-scheme=>"https?"})/g;

        for (@urls) {
            say "study: $_";
            $brain->study($_);
        }

        my $k_text = $brain->remember($text);
        my $k_url  = $brain->blob->add("http://twitter.com/" . $tweet->{user}{screen_name} . "/statuses/" . $tweet->{id_str});
        $brain->relation("origin")->add($k_text, $k_url);
        say "read tweet: $text";
    },
    on_keepalive => sub {
        warn "ping\n";
    },
    timeout => 600,
);

$done->recv;
