#!/usr/bin/env perl -w
use strict;
use warnings;
use 5.010;
use AnyEvent::Superfeedr;
use Encode;
use String::Truncate qw(elide);
use YAML;
use Getopt::Std;

use Mac::Growl qw(:all);

my $opts = {};
# config, username, password
getopts("c:u:p:", $opts);

if ($$opts{c}) {
    my $c = YAML::LoadFile($$opts{c});
    if (!$$c{jid} || !$$c{password}) {
        die "Config file should set jid and password.\n";
    }
    $$opts{u} = $$c{jid};
    $$opts{p} = $$c{password};
}
elsif (!$$opts{u} || !$$opts{p}) {
    die <<USAGE;

Usage:

    $0 -c <config_file>

Or

    $0 -u <jid> -p <password>

USAGE
}

my $AppName   = "Superfeedr-Growl";
my $EventType = "Notified";

RegisterNotifications($AppName, [ $EventType ], [ $EventType ]);

my $end = AnyEvent->condvar;
my $sf = AnyEvent::Superfeedr->new(
    jid => $$opts{u},
    password => $$opts{p},
    on_notification => sub {
        my $notification = shift;

        for my $entry ($notification->entries) {
            PostNotification(
                $AppName,
                $EventType,
                $entry->title   || "(Untitled)",
                $entry->summary || "(No Sumary)",
                0, 0,
                "/Users/gugod/local/images/superfeedr.png"
            );

            if ($$opts{d}) {
                my $dump = {};
                $dump->{$_} = $entry->$_ for qw(title author summary content link);
                say Dump $dump;
                say "----";
            }
        }
    },
);
$end->recv;
