#!/usr/bin/env perl
#
# Add to corntab:
#
#     0,35 9-16 * * 1-5 plurk-esun-jpy -c /path/to/plurk.yml
#
#

use strict;
use warnings;
use 5.010;

package PlurkPoster;
use Object::Tiny qw(username password);
use WWW::Mechanize;
use Try::Tiny;

sub login {
    my $self = shift;
    my $ua = WWW::Mechanize->new;
    $ua->get('http://www.plurk.com/m/login');
    $ua->submit_form(with_fields => { username => $self->username, password => $self->password });

    $self->{ua} = $ua;
}

sub post {
    my ($self, $content) = @_;
    try {
        $self->{ua}->get('/m/');
        $self->{ua}->submit_form(with_fields => { content =>  $content });
    };
}

package main;

use YAML::Tiny qw(Dump LoadFile);
use Getopt::Std;
use Finance::Bank::Esun::TW;
use AnyEvent;
use AnyEvent::Feed;

my %opts;

getopt('c', \%opts);

die "Usage: $0 -c plurk.yml\n" unless $opts{c};

my $config = LoadFile($opts{c}) or die "Fail to load plurk.yml\n";
my $plurker = PlurkPoster->new(
    username => $config->{username},
    password => $config->{password},
);
$plurker->login;

sub post_currency_exchange_rate {
    my $rates = Finance::Bank::Esun::TW->currency_exchange_rate;
    $_ = @$rates[ 5 ];
    my $content = "http://www.esunbank.com.tw/info/rate_spot_exchange.aspx (Esun $_->{en_currency_name}: Buy: $_->{buy_at} / Sell: $_->{sell_at})";
    $plurker->post($content);
}

my $global_cv = AE::cv;

my @tasks;

for my $feed_url (@{$config->{feeds}}) {
    push @tasks, AnyEvent::Feed->new(
        url      => $feed_url,
        interval => 300,
        on_fetch => sub {
            my ($feed_reader, $new_entries, $feed, $error) = @_;

            if (defined $error) {
                warn "ERROR: $error\n";
                return;
            }

            for (@$new_entries) {
                my ($hash, $entry) = @$_;
                my $content =  $entry->link . " (" .$entry->title . ")";
                $plurker->post($content);
            }
        }
    );
}

push @tasks, AE::timer(10, 600, \&post_currency_exchange_rate);

$global_cv->recv;
